{ config, pkgs, lib, utils, ... }:

with utils;
with lib;
with import ./lib.nix lib;

let
  cfg = config.deployment.digital-ocean;
in
{
  ###### interface
  options = {

    deployment.digital-ocean.authToken = mkOption {
      default = "";
      example = "8b2f4e96af3997853bfd4cd8998958eab871d9614e35d63fab45a5ddf981c4da";
      type = types.str;
      description = ''
        The DO token. If empty
        <envar>DIGITAL_OCEAN_API_TOKEN</envar>
      '';
    };

    deployment.digital-ocean.region = mkOption {
      default = "";
      example = "nyc3";
      type = types.str;
      description = ''
      DO region
      '';
    };

    deployment.digital-ocean.size = mkOption {
      example = "512mb";
      type = types.str;
      description = ''
        size
      '';
    };

    deployment.digital-ocean.keyName = mkOption {
      example = "teh";
      type = types.str;
      description = ''
        name of key to use - TODO should be generated by nixops
      '';
    };
  };

  config = mkIf (config.deployment.targetEnv == "digital-ocean") {
    nixpkgs.system = mkOverride 900 "x86_64-linux";
  };
}
